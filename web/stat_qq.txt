<pre>
> m <- ggplot(movies, aes(x = rating))
> m + stat_qq()
<a href='web/graphics/9ef9763a35640258de5d82531c56f297.pdf'><img src='web/graphics/9ef9763a35640258de5d82531c56f297.png' /></a>

> m + stat_qq() + geom_abline()
<a href='web/graphics/68ab0724f12c734a77be2b96085c83fa.pdf'><img src='web/graphics/68ab0724f12c734a77be2b96085c83fa.png' /></a>

> m + stat_qq(distribution = qunif, min = 1, max = 10) + geom_abline()
<a href='web/graphics/39e076ac8c7fff76dc07c7da14bdfb06.pdf'><img src='web/graphics/39e076ac8c7fff76dc07c7da14bdfb06.png' /></a>

> m + stat_qq(quantiles = seq(0.01, 0.99, by = 0.05), distribution = qunif, 
+     min = 1, max = 10) + geom_abline()
<a href='web/graphics/4c0fd694473bdd29de059d58eb2c6dc8.pdf'><img src='web/graphics/4c0fd694473bdd29de059d58eb2c6dc8.png' /></a>

> qplot(movies$rating, geom = "histogram", binwidth = 0.1)
<a href='web/graphics/3ea8af1a300226649941162fedd28517.pdf'><img src='web/graphics/3ea8af1a300226649941162fedd28517.png' /></a>

> distn <- fitdistr(movies$rating, "normal")
> m + stat_qq(distribution = function(x) qnorm(x, distn$estimate[1], 
+     sd = distn$estimate[2])) + geom_abline()
<a href='web/graphics/6e99dca7bc8bd5613af21f92fbcf75bf.pdf'><img src='web/graphics/6e99dca7bc8bd5613af21f92fbcf75bf.png' /></a>

> distt <- fitdistr(movies$rating, "t")
> m + stat_qq(distribution = function(x) qt(x, distt$estimate[3], 
+     distt$estimate[1]) * distt$estimate[2]) + geom_abline()
<a href='web/graphics/45e80a6b3ac9ef40559412dcbd3fb6c7.pdf'><img src='web/graphics/45e80a6b3ac9ef40559412dcbd3fb6c7.png' /></a>

> ggplot(movies, aes(x = rating, y = rating * 2)) + stat_qq()
<a href='web/graphics/2fb2a85eeab838753d30c424a750c9b1.pdf'><img src='web/graphics/2fb2a85eeab838753d30c424a750c9b1.png' /></a>

> ggplot(movies, aes(x = rating, y = rating^2)) + stat_qq()
<a href='web/graphics/169aea976168725b4c4de93558155a44.pdf'><img src='web/graphics/169aea976168725b4c4de93558155a44.png' /></a>

</pre>
